{"version":3,"file":"static/js/201.f4f0270d.chunk.js","mappings":"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","sources":["webpack://test-task-goit-cra/./src/components/Tweet/Tweet.module.css?2fb7","img/Logo.svg","utils/Api.js","components/Tweet/Tweet.jsx","webpack://test-task-goit-cra/./src/components/Tweets/Tweets.module.css?20f9","components/Tweets/Tweets.jsx","components/Chakra/Dropdown.jsx","pages/TweetsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tweet__card\":\"Tweet_tweet__card__1i-rP\",\"logo\":\"Tweet_logo__9H3gS\",\"tweet__img\":\"Tweet_tweet__img__9JBqv\",\"tweet__border\":\"Tweet_tweet__border__+Z-2p\",\"tweet__wrap\":\"Tweet_tweet__wrap__OXtgm\",\"img__avatar\":\"Tweet_img__avatar__FNjo3\",\"wrap__text\":\"Tweet_wrap__text__NdCvn\",\"text__item\":\"Tweet_text__item__33I-Z\",\"tweet__text\":\"Tweet_tweet__text__QEJU3\",\"tweet__button\":\"Tweet_tweet__button__hmzgU\",\"active__button\":\"Tweet_active__button__VlYKA\"};","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 76 22\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    fillOpacity: 0.3,\n    fillRule: \"evenodd\",\n    d: \"M0 0h33.502l8.816 11-8.816 11H0V0Zm15.109 9.878a36.703 36.703 0 0 1-.155-.124c-.13-.104-.258-.207-.39-.305-.357-.271-.747-.487-1.193-.583-.493-.107-.99-.145-1.482.002-.7.21-1.189.668-1.511 1.304-.268.53-.34 1.092-.27 1.676.057.458.205.882.478 1.259.419.578.99.912 1.704 1 .643.08 1.266 0 1.855-.279.2-.095.2-.097.2-.317v-.004l.001-.16a34.206 34.206 0 0 0 0-.377c.001-.044.001-.067-.01-.079-.012-.012-.037-.011-.089-.01H12.29c-.052 0-.078 0-.09-.012-.012-.011-.011-.034-.01-.08v-1.535a898.478 898.478 0 0 0 0-.761c.001-.019.002-.037 0-.056-.003-.043.012-.066.06-.062a.518.518 0 0 0 .056 0h4.751c.031 0 .057.006.053.045-.003.023.012.039.027.055.019.02.038.04.027.074-.009.03-.007.063-.004.095a.6.6 0 0 1 .002.044v.842c0 1.123 0 2.246.002 3.368a.238.238 0 0 1-.099.206 7.099 7.099 0 0 1-2.987 1.476 6.72 6.72 0 0 1-2.009.134c-.8-.063-1.56-.266-2.263-.65-1.289-.707-2.1-1.778-2.474-3.178a5.522 5.522 0 0 1-.162-1.883c.196-2.358 1.87-4.196 4.112-4.708.64-.146 1.287-.168 1.94-.124.499.034.99.111 1.471.252.72.212 1.356.578 1.935 1.047.067.055.134.11.2.167.083.07.085.11.012.197l-1.093 1.3h-.001l-.547.65c-.005.005-.01.011-.014.018a.269.269 0 0 1-.076.076Zm13.065-2.252a5.608 5.608 0 0 0-3.769-1.475c-.626.001-1.094.052-1.59.18-1.44.371-2.567 1.169-3.316 2.442-.769 1.307-.925 2.708-.495 4.15.48 1.611 1.506 2.784 3.091 3.437 1.218.5 2.48.568 3.752.237 1.478-.383 2.61-1.231 3.354-2.554.626-1.116.793-2.312.56-3.56a4.985 4.985 0 0 0-1.587-2.857Zm-4.09 1.207c-.744.017-1.51.436-1.99 1.313-.326.594-.402 1.236-.279 1.898.098.523.328.987.708 1.367.595.593 1.322.826 2.155.731.861-.097 1.502-.533 1.912-1.283.35-.638.422-1.32.259-2.023-.27-1.165-1.256-2.006-2.765-2.003Z\",\n    clipRule: \"evenodd\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    fillOpacity: 0.3,\n    fillRule: \"evenodd\",\n    d: \"M42.318 0H76v22H42.318V0Zm11.309 11.274v-5.03c-.002-.047-.002-.07.01-.082.012-.012.035-.011.082-.01a3.983 3.983 0 0 0 .044 0h2.618c.064-.007.084.023.078.082-.001.016 0 .031 0 .047v9.978a1.303 1.303 0 0 0 .001.056c.001.047.002.07-.01.083-.013.012-.04.012-.093.012h-2.582l-.023-.001a.344.344 0 0 0-.048 0c-.067.01-.082-.024-.077-.082v-5.054Zm14.108-5.122H63.51l-4.222-.001h-.095c-.048-.002-.064.02-.06.063v2.439c0 .069-.003.1.012.114.014.014.047.011.117.011h2.654c.087 0 .13 0 .15.021.022.02.022.062.022.143v7.34c0 .069-.005.1.01.114.013.015.045.012.117.012h2.547c.08 0 .12 0 .139-.019.02-.02.02-.057.02-.133v-7.34c0-.075-.005-.109.01-.124.015-.016.05-.013.13-.013h2.703c.116 0 .116 0 .117-.113v-2.37c0-.081.005-.117-.011-.133-.016-.015-.052-.01-.134-.01Z\",\n    clipRule: \"evenodd\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/Logo.0c489972eb383e508d8736a410f9a333.svg\";\nexport { ForwardRef as ReactComponent };","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = \"https://6438fee64660f26eb1a7e5cd.mockapi.io/api\";\n\nexport async function getUsers(page) {\n  try {\n    const { data } = await axios(`/users?page=${page}&limit=3`);\n    return data;\n  } catch (error) {\n    toast.error(`${error.request.statusText}`);\n    return error.request.statusText;\n  }\n}\n\nexport async function putUserCount(id, newCount) {\n  try {\n    const { data } = await axios.put(`/users/${id}`, {\n      followers: newCount,\n    });\n    console.log(data);\n    return data;\n  } catch (error) {\n    toast.error(`${error.request.statusText}`);\n    return error.request.statusText;\n  }\n}\n\nexport async function getUsersSort(user_name) {\n  try {\n    const { data } = await axios(`/users?sortBy=${user_name}`);\n    console.log(data);\n  } catch (error) {\n    toast.error(`${error.request.statusText}`);\n    return error.request.statusText;\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport css from \"./Tweet.module.css\";\nimport Logo from \"../../img/Logo.svg\";\nimport Picture_abstract from \"../../img/Picture_abstract.png\";\nimport { putUserCount } from \"../../utils/Api\";\nimport { toast } from \"react-toastify\";\n\nexport default function Tweet({ user }) {\n  const { id, avatar, tweets, followers, user_name } = user;\n  const {\n    tweet__card,\n    logo,\n    tweet__img,\n    tweet__border,\n    tweet__wrap,\n    img__avatar,\n    wrap__text,\n    text__item,\n    tweet__text,\n    tweet__button,\n    active__button,\n  } = css;\n\n  const [countFollowers, setCountFollowers] = useState(followers);\n  const [isActiveButton, setIsActiveButton] = useState(\n    JSON.parse(localStorage.getItem(id)).isActiveButton ?? false\n  );\n\n  const valueFollowersToString = String(countFollowers);\n  const valueFollowersToSlice = valueFollowersToString.slice(\n    valueFollowersToString.length - 3\n  );\n  const valueFollowersWithComa =\n    valueFollowersToString.replace(valueFollowersToSlice, \",\") +\n    `${valueFollowersToSlice}`;\n\n  useEffect(() => {\n    localStorage.setItem(id, JSON.stringify({ isActiveButton, user_name }));\n  }, [id, isActiveButton, user_name]);\n\n  function setCountFollowersAndActiveButton(data) {\n    setCountFollowers(data.followers);\n    setIsActiveButton(!isActiveButton);\n  }\n\n  function handleClick(e) {\n    const currentId = e.currentTarget.id;\n\n    if (isActiveButton) {\n      putUserCount(currentId, countFollowers - 1)\n        .then((data) => {\n          setCountFollowersAndActiveButton(data);\n        })\n        .catch(toast.warning);\n    } else {\n      putUserCount(currentId, countFollowers + 1)\n        .then((data) => {\n          setCountFollowersAndActiveButton(data);\n        })\n        .catch(toast.warning);\n    }\n  }\n\n  return (\n    <li>\n      <div className={tweet__card}>\n        <img className={logo} src={Logo} alt=\"Logo\" />\n        <img\n          className={tweet__img}\n          src={Picture_abstract}\n          alt=\"Picture_abstract\"\n        />\n        <div className={tweet__border}>\n          <div className={tweet__wrap}>\n            <img className={img__avatar} src={avatar} alt={user_name} />\n          </div>\n        </div>\n        <div className={wrap__text}>\n          <ul>\n            <li className={text__item}>\n              <p className={tweet__text}>\n                {tweets} <span className={tweet__text}>tweets</span>\n              </p>\n            </li>\n            <li className={text__item}>\n              <p className={tweet__text}>\n                {valueFollowersWithComa}{\" \"}\n                <span className={tweet__text}>followers</span>\n              </p>\n            </li>\n          </ul>\n          <button\n            onClick={handleClick}\n            className={\n              isActiveButton\n                ? `${tweet__button} ${active__button}`\n                : `${tweet__button}`\n            }\n            id={id}\n            type=\"button\"\n          >\n            {isActiveButton ? \"following\" : \"follow\"}\n          </button>\n        </div>\n      </div>\n    </li>\n  );\n}\n\n// ====================================\n// import { useEffect, useState } from \"react\";\n// import css from \"./Tweet.module.css\";\n// import Logo from \"../../img/Logo.svg\";\n// import Picture_abstract from \"../../img/Picture_abstract.png\";\n// import { putUserCount } from \"../../utils/Api\";\n// import { toast } from \"react-toastify\";\n\n// export default function Tweet({ user }) {\n//   const { id, avatar, tweets, followers, user_name } = user;\n//   const {\n//     tweet__card,\n//     logo,\n//     tweet__img,\n//     tweet__border,\n//     tweet__wrap,\n//     img__avatar,\n//     wrap__text,\n//     text__item,\n//     tweet__text,\n//     tweet__button,\n//     active__button,\n//   } = css;\n\n//   const [countFollowers, setCountFollowers] = useState(followers);\n//   const [isActiveButton, setIsActiveButton] = useState(\n//     JSON.parse(localStorage.getItem(id)) ?? false\n//   );\n\n//   const valueFollowersToString = String(countFollowers);\n//   const valueFollowersToSlice = valueFollowersToString.slice(\n//     valueFollowersToString.length - 3\n//   );\n//   const valueFollowersWithComa =\n//     valueFollowersToString.replace(valueFollowersToSlice, \",\") +\n//     `${valueFollowersToSlice}`;\n\n//   useEffect(() => {\n//     localStorage.setItem(id, JSON.stringify(isActiveButton, user_name));\n//   }, [id, isActiveButton, user_name]);\n\n//   function setCountFollowersAndActiveButton(data) {\n//     setCountFollowers(data.followers);\n//     setIsActiveButton(!isActiveButton);\n//   }\n\n//   function handleClick(e) {\n//     const currentId = e.currentTarget.id;\n\n//     if (isActiveButton) {\n//       putUserCount(currentId, countFollowers - 1)\n//         .then((data) => {\n//           setCountFollowersAndActiveButton(data);\n//         })\n//         .catch(toast.warning);\n//     } else {\n//       putUserCount(currentId, countFollowers + 1)\n//         .then((data) => {\n//           setCountFollowersAndActiveButton(data);\n//         })\n//         .catch(toast.warning);\n//     }\n//   }\n//   console.log(JSON.parse(localStorage.getItem(id)));\n//   return (\n//     <li>\n//       <div className={tweet__card}>\n//         <img className={logo} src={Logo} alt=\"Logo\" />\n//         <img\n//           className={tweet__img}\n//           src={Picture_abstract}\n//           alt=\"Picture_abstract\"\n//         />\n//         <div className={tweet__border}>\n//           <div className={tweet__wrap}>\n//             <img className={img__avatar} src={avatar} alt={user_name} />\n//           </div>\n//         </div>\n//         <div className={wrap__text}>\n//           <ul>\n//             <li className={text__item}>\n//               <p className={tweet__text}>\n//                 {tweets} <span className={tweet__text}>tweets</span>\n//               </p>\n//             </li>\n//             <li className={text__item}>\n//               <p className={tweet__text}>\n//                 {valueFollowersWithComa}{\" \"}\n//                 <span className={tweet__text}>followers</span>\n//               </p>\n//             </li>\n//           </ul>\n//           <button\n//             onClick={handleClick}\n//             className={\n//               isActiveButton\n//                 ? `${tweet__button} ${active__button}`\n//                 : `${tweet__button}`\n//             }\n//             id={id}\n//             type=\"button\"\n//           >\n//             {isActiveButton ? \"following\" : \"follow\"}\n//           </button>\n//         </div>\n//       </div>\n//     </li>\n//   );\n// }\n","// extracted by mini-css-extract-plugin\nexport default {\"card__list\":\"Tweets_card__list__JR-jS\"};","import Tweet from \"../Tweet/Tweet\";\nimport css from \"./Tweets.module.css\";\n\nexport default function Tweets({ users }) {\n  return (\n    <ul className={css.card__list}>\n      {users.map((user) => (\n        <Tweet key={user.id} user={user} />\n      ))}\n    </ul>\n  );\n}\n","import { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Button, Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/react\";\nimport { getUsersSort } from \"../../utils/Api\";\n\nexport default function Dropdown() {\n  function sortByName() {\n    getUsersSort();\n  }\n\n  return (\n    <Menu>\n      {({ isOpen }) => (\n        <>\n          <MenuButton\n            style={{\n              width: 196,\n              height: 50,\n              backgroundColor: \"#EBD8FF\",\n              borderRadius: 10.31,\n              textTransform: \"uppercase\",\n              lineHeight: 0.82,\n              fontSize: 18,\n              fontWeight: 600,\n              color: \"#373737\",\n              boxShadow: \"0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25)\",\n            }}\n            isActive={isOpen}\n            as={Button}\n            rightIcon={<ChevronDownIcon />}\n          >\n            {isOpen ? \"Close\" : \"Sort\"}\n          </MenuButton>\n          <MenuList>\n            <MenuItem onClick={sortByName}>Show all</MenuItem>\n            <MenuItem onClick={sortByName}>Follow</MenuItem>\n            <MenuItem onClick={sortByName}>Following</MenuItem>\n          </MenuList>\n        </>\n      )}\n    </Menu>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport Tweets from \"../components/Tweets/Tweets\";\nimport { getUsers } from \"../utils/Api\";\nimport { Link } from \"react-router-dom\";\nimport Dropdown from \"../components/Chakra/Dropdown\";\n\nexport default function TweetsPage() {\n  const [users, setUsers] = useState([]);\n  const [countPage, setCountPage] = useState(1);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getUsers(countPage)\n      .then((data) => setUsers((prevUsers) => [...prevUsers, ...data]))\n      .catch(setError);\n  }, [countPage]);\n\n  function handleLoadMorePage() {\n    setCountPage((s) => s + 1);\n  }\n\n  return (\n    <>\n      {users.length !== 0 && !error && (\n        <>\n          <div\n            style={{\n              marginTop: 16,\n              marginBottom: 16,\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Link\n              style={{\n                padding: 16,\n                backgroundColor: \"#EBD8FF\",\n                borderRadius: 10.31,\n                textTransform: \"uppercase\",\n                textAlign: \"center\",\n                lineHeight: 0.82,\n                fontSize: 18,\n                fontWeight: 600,\n                color: \"#373737\",\n                boxShadow: \"0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25)\",\n              }}\n              to=\"/\"\n            >\n              Go Home\n            </Link>\n\n            <Dropdown />\n          </div>\n          <Tweets users={users} />\n          <button\n            style={{\n              marginTop: 16,\n              width: 196,\n              height: 50,\n              backgroundColor: \"#EBD8FF\",\n              borderRadius: 10.31,\n              textTransform: \"uppercase\",\n              lineHeight: 0.82,\n              fontSize: 18,\n              fontWeight: 600,\n              color: \"#373737\",\n              boxShadow: \"0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25)\",\n            }}\n            type=\"button\"\n            onClick={handleLoadMorePage}\n          >\n            LoadMore\n          </button>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["_getUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","_yield$axios","data","wrap","_context","prev","next","axios","concat","sent","abrupt","t0","toast","request","statusText","stop","apply","arguments","putUserCount","_x2","_x3","_putUserCount","_callee2","id","newCount","_yield$axios$put","_context2","followers","console","log","_getUsersSort","_callee3","user_name","_yield$axios2","_context3","Tweet","_ref","_JSON$parse$isActiveB","user","avatar","tweets","tweet__card","css","logo","tweet__img","tweet__border","tweet__wrap","img__avatar","wrap__text","text__item","tweet__text","tweet__button","active__button","_useState","useState","_useState2","_slicedToArray","countFollowers","setCountFollowers","_useState3","JSON","parse","localStorage","getItem","isActiveButton","_useState4","setIsActiveButton","valueFollowersToString","String","valueFollowersToSlice","slice","length","valueFollowersWithComa","replace","setCountFollowersAndActiveButton","useEffect","setItem","stringify","_jsx","children","_jsxs","className","src","Logo","alt","Picture_abstract","onClick","e","currentId","currentTarget","then","catch","type","Tweets","users","map","Dropdown","sortByName","_x4","getUsersSort","Menu","isOpen","_Fragment","MenuButton","style","width","height","backgroundColor","borderRadius","textTransform","lineHeight","fontSize","fontWeight","color","boxShadow","isActive","as","Button","rightIcon","ChevronDownIcon","MenuList","MenuItem","TweetsPage","setUsers","countPage","setCountPage","_useState5","_useState6","error","setError","_x","getUsers","prevUsers","_toConsumableArray","marginTop","marginBottom","display","justifyContent","Link","padding","textAlign","to","s"],"sourceRoot":""}